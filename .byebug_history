quit
results3['conversion_rate']
quit
results2['conversion_rate']
results['conversion_rate']
quit
results['conversion_rate']
continue
results['conversion_rate']
results
results = JSON.parse(response.to_s)
JSON.parse(response.to_s)
response
q
items:
pagy_countless
@products
@pagy
q
@pagy
turbo_frame_tag "products-#{@pagy.next}", class: 'products', src: pagy_url_for(@pagy, @pagy.next), loading: :lazy 
turbo_frame_tag "products-#{@pagy.next}", class: 'products', src: pagy_url_for(@pagy, @pagy.next), loading: :lazy if @pagy.next
pagy.next
@pagy.page
exit
@pagy.page
@pagy, @products = pagy_countless(@products, items: 12)
pagy_countless(@products, items: 12)
exit
@products = @products.order("created_at DESC").load_async
@products = @products.search_full_text(params[:query_text])
@products = Product.with_attached_photo
@products = @products.order(order_by).load_async
@products.order("created_at DESC")
order_by
@products.order(order_by)
@products.order(:order_by)
@products.order(order_by)
order_by
@products = @products.search_full_text(params[:query_text])
@products.search_full_text(params[:query_text])
@products = Product.with_attached_photo
@products = @products.search_full_text(params[:query_text])
params[:query_text]
@products
q
exit
order_by
@products = @products.order(title: :asc)
@products = @products.order(order_by)
@products
@products = @products.order(order_by).load_async
@pagy, @products = pagy_countless(@products, items: 12)
@pagy.page
q
 products_path(order_by: 'cheapest')
products_path
.product:first-child
assert_response
asser_response
q
order_by
products
products_path(order_by: 'expensive')
q
c
q
pagy_countless(@products, items: 12)
@products.count
@products
q
assert_response}
q
}q
--seed
continue
q
continue
cont
@product.save!
@product.save
@product
